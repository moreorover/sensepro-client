name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ghcr.io/${{ github.repository }}

jobs:
  build-and-push-image:
    name: Publish Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          platforms: linux/arm/v8
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}

  deploy-development:
    name: Deploy to development
    environment:
      name: development
    runs-on: ubuntu-latest
    needs:
      - build-and-push-image
    timeout-minutes: 30
    env:
      VERSION: ${{ github.sha }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:dev-ci

      - name: Test Hostname Resolution
        run: |
          ping -c 3 raspberrypi || (echo "Hostname resolution failed!" && exit 1)
          nc -zv raspberrypi 22 || (echo "Port 22 is not accessible!" && exit 1)

      - name: Prepare SSH Directory
        run: |
          mkdir -p ~/.ssh
          chmod 0700 ~/.ssh
          ssh-keyscan -p "22" -H "raspberrypi" >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Test SSH Connection
        run: ssh -o ConnectTimeout=30 "pi@raspberrypi" "echo 'SSH connection successful!'"

      - name: Create .env file
        run: |
          echo "RABBITMQ_USER=${{ secrets.RABBITMQ_USER }}" > .env
          echo "RABBITMQ_PASSWORD=${{ secrets.RABBITMQ_PASSWORD }}" >> .env
          echo "RASPBERRY_PI_SERIAL=$(cat /proc/cpuinfo | grep Serial | awk '{print $3}')" >> .env

      # Copy the compose file and script to the remote server
      - name: Copy files to the remote server
        run: |
         scp docker-compose.yaml deploy_compose.sh .env pi@raspberrypi:/opt/sensepro-controller/
         ssh pi@raspberrypi "chmod +x /opt/sensepro-controller/deploy_compose.sh"

      # Run the deployment script on the remote server
      - name: Deploy application
        run: |
          ssh pi@raspberrypi "/opt/sensepro-controller/deploy_compose.sh"
