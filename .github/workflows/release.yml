name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ghcr.io/${{ github.repository }}

jobs:
  deploy-development:
    name: Deploy to development
    environment:
      name: development
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Set up the Maven dependencies caching
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run tests
        run: mvn --batch-mode --update-snapshots verify -Drevision=${{ github.sha }}

      - name: Tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:dev-ci

      - name: Test Hostname Resolution
        run: |
          ping -c 3 raspberrypi || (echo "Hostname resolution failed!" && exit 1)
          nc -zv raspberrypi 22 || (echo "Port 22 is not accessible!" && exit 1)

      - name: Prepare SSH Directory
        run: |
          mkdir -p ~/.ssh
          chmod 0700 ~/.ssh
          ssh-keyscan -p "22" -H "raspberrypi" >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Test SSH Connection
        run: ssh -o ConnectTimeout=30 "pi@raspberrypi" "echo 'SSH connection successful!'"

      - name: Create controller.config file
        run: |
          echo "RABBITMQ_USER=${{ secrets.RABBITMQ_USER }}" > controller.config
          echo "RABBITMQ_PASSWORD=${{ secrets.RABBITMQ_PASSWORD }}" >> controller.config
          echo "RASPBERRY_PI_SERIAL=PLACEHOLDER" >> controller.config

      - name: Copy files to the remote server
        run: |
         scp controller.config pi@raspberrypi:/home/pi/production/
         scp ./target/controller-${{ github.sha }}.jar pi@raspberrypi:/home/pi/releases/controller-${{ github.sha }}.jar

      # Run the deployment script on the remote server
      - name: Deploy application
        run: |
          ssh pi@raspberrypi "sed -i 's/PLACEHOLDER/\$(cat /proc/cpuinfo | grep Serial | awk \x27{print \$3}\x27)/' /home/pi/production/controller.config"
          ssh pi@raspberrypi 'bash -s' < ./deploy/deploy.sh $GITHUB_SHA
